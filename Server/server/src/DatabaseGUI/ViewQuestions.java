/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package DatabaseGUI;

import com.mysql.jdbc.Connection;
import java.sql.ResultSet;
import com.mysql.jdbc.Statement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author sukalyan14
 */
public class ViewQuestions extends javax.swing.JFrame {

    //Connection databaseConnection;
    
    /**
     * Creates new form ViewQuestions
     */
   
    
    public ViewQuestions() {
        initComponents();
        
        heading.setFont(new java.awt.Font(Essentials.fontURL,1,24));
        heading.setText(Essentials.messages.getString("viewQuestions"));
        
        keyword.setFont(new java.awt.Font(Essentials.fontURL,1,18));
        keyword.setText(Essentials.messages.getString("keyword"));
        
        subject.setFont(new java.awt.Font(Essentials.fontURL,1,18));
        subject.setText(Essentials.messages.getString("subject"));
        
        standard.setFont(new java.awt.Font(Essentials.fontURL,1,18));
        standard.setText(Essentials.messages.getString("standard"));
        
        level.setFont(new java.awt.Font(Essentials.fontURL,1,18));
        level.setText(Essentials.messages.getString("level"));
        
        fromDate.setFont(new java.awt.Font(Essentials.fontURL,1,18));
        fromDate.setText(Essentials.messages.getString("fromDate"));
        
        toDate.setFont(new java.awt.Font(Essentials.fontURL,1,18));
        toDate.setText(Essentials.messages.getString("toDate"));
        
        submitButton.setFont(new java.awt.Font(Essentials.fontURL,1,18));
        submitButton.setText(Essentials.messages.getString("submit"));
        
        clearButton.setFont(new java.awt.Font(Essentials.fontURL,1,18));
        clearButton.setText(Essentials.messages.getString("clear"));
        
        backButton.setFont(new java.awt.Font(Essentials.fontURL,1,18));
        backButton.setText(Essentials.messages.getString("back"));
        
        
        
        String[] subject={"",Essentials.messages.getString("english"),Essentials.messages.getString("maths"),Essentials.messages.getString("science"),Essentials.messages.getString("hindi"),Essentials.messages.getString("computer"),Essentials.messages.getString("gk")};
        //String[] subject={"","English","Maths","Science","Hindi","Computer","GK"};
        String[] standard={"","1","2","3","4","5","6","7","8","9","10","11","12"};
        String[] level={"","1","2","3","4","5"};
        
     // filled the options that can be selected by the teacher
     subjectField.setModel(new javax.swing.DefaultComboBoxModel(subject));
     standardField.setModel(new javax.swing.DefaultComboBoxModel(standard));
     levelField.setModel(new javax.swing.DefaultComboBoxModel(level));
     
     
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        heading = new javax.swing.JLabel();
        keyword = new javax.swing.JLabel();
        subject = new javax.swing.JLabel();
        standard = new javax.swing.JLabel();
        level = new javax.swing.JLabel();
        fromDate = new javax.swing.JLabel();
        toDate = new javax.swing.JLabel();
        keywordField = new javax.swing.JTextField();
        fromDateField = new javax.swing.JTextField();
        toDateField = new javax.swing.JTextField();
        subjectField = new javax.swing.JComboBox();
        standardField = new javax.swing.JComboBox();
        levelField = new javax.swing.JComboBox();
        submitButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        heading.setFont(new java.awt.Font("TakaoPGothic", 1, 24)); // NOI18N
        heading.setText("View Questions");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(heading)
                .addGap(300, 300, 300))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(heading)
                .addGap(24, 24, 24))
        );

        keyword.setFont(new java.awt.Font("TakaoPGothic", 1, 18)); // NOI18N
        keyword.setText("Keyword:");

        subject.setFont(new java.awt.Font("TakaoPGothic", 1, 18)); // NOI18N
        subject.setText("Subject:");

        standard.setFont(new java.awt.Font("TakaoPGothic", 1, 18)); // NOI18N
        standard.setText("Standard:");

        level.setFont(new java.awt.Font("TakaoPGothic", 1, 18)); // NOI18N
        level.setText("Level:");

        fromDate.setFont(new java.awt.Font("TakaoPGothic", 1, 18)); // NOI18N
        fromDate.setText("From Date:");

        toDate.setFont(new java.awt.Font("TakaoPGothic", 1, 18)); // NOI18N
        toDate.setText("To Date:");

        keywordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keywordFieldActionPerformed(evt);
            }
        });

        subjectField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        standardField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        standardField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standardFieldActionPerformed(evt);
            }
        });

        levelField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        submitButton.setFont(new java.awt.Font("TakaoPGothic", 1, 18)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("TakaoPGothic", 1, 18)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("TakaoPGothic", 1, 18)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fromDate)
                    .addComponent(level)
                    .addComponent(subject)
                    .addComponent(keyword)
                    .addComponent(toDate)
                    .addComponent(standard))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fromDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(levelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(220, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(clearButton)
                .addGap(47, 47, 47)
                .addComponent(backButton)
                .addGap(182, 182, 182))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fromDateField, keywordField, toDateField});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {backButton, clearButton, submitButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyword)
                    .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subject))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(standardField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standard))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(level)
                    .addComponent(levelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toDate)
                    .addComponent(toDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(clearButton)
                    .addComponent(backButton))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(810, 590));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void keywordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keywordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keywordFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        
        if(Essentials.objViewQuestions==null)
        {
            Essentials.objTeacherOption=new TeacherOptions();
        }
        clearButtonActionPerformed(evt);
        Essentials.objViewQuestions.setVisible(false);
        Essentials.objTeacherOption.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        keywordField.setText("");
        subjectField.setSelectedIndex(0);
        standardField.setSelectedIndex(0);
        levelField.setSelectedIndex(0);
        fromDateField.setText("");
        toDateField.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        
         int flag=0;
        
        String keyword=new String(keywordField.getText());
        String subject=new String(subjectField.getSelectedItem().toString());
        String standard=new String(standardField.getSelectedItem().toString());
        String level=new String(levelField.getSelectedItem().toString());
        String fromDate=new String(fromDateField.getText());
        String toDate=new String(toDateField.getText());
        
        String query=new String("SELECT * FROM  question_table WHERE ");
        
        // if keyword is selected
        if(!keyword.equals(""))
        {
                query=query.concat("question REGEXP '"+keyword+"' ");
		flag=1;
        }
        
        // if subject is selected
        if(!subject.equals(""))
        {
            if(flag==1)
            {
                query=query.concat("AND ");
            }
            query=query.concat(" subject LIKE '"+subject+"'");
            
            // denoting that one WHERE has been used and AND has to be used in the coming conditions
            flag=1;		
        }
        
        
        // if standard is chosen
        if(!standard.equals(""))
	{
            if(flag==1)		// checking if 1st conditional clause or not
            {
		query=query.concat(" AND");
            }
            query=query.concat(" std LIKE '"+standard+"'");
            flag=1;
        }
        
        // if level is selected
        if(!level.equals(""))
	{
            if(flag==1)		// checking if 1st conditional clause or not
            {
            	query=query.concat(" AND");
            }
            query=query.concat(" level LIKE '"+level+"'");
            flag=1;
        }
        
        // if both the dates are given then the questions within the range will come as the output
	if(!fromDate.equals("") && !toDate.equals(""))
	{
		if(flag==1)
		{
			query=query.concat(" AND");
		}
		query=query.concat(" date between '"+fromDate+"' AND '"+toDate+"'");
	}
	
	// if From Date is given then the parameter is the lower value 
	else if(!fromDate.equals(""))
	{
		if(flag==1)
		{
			query=query.concat(" AND");
		}
		query=query.concat(" date > '"+fromDate+"'");
	}
	
	// if To Date is given then the parameter is the higher value
	else if(!toDate.equals(""))
	{
		if(flag==1)
		{
			query=query.concat(" AND");
		}
		query=query.concat(" date < '"+toDate+"'");
	}
        
        if(flag==0)
        {
             JOptionPane.showMessageDialog(this,Essentials.messages.getString("pleaseEnterOneField"));
             clearButtonActionPerformed(evt);
        }
        else
        {
            ResultSet res;
            try 
            {
                Statement start=(Statement)Essentials.databaseConnection.createStatement();
                res = (ResultSet)start.executeQuery(query);
                ViewPerformanceInTable obj=new ViewPerformanceInTable();
                clearButtonActionPerformed(evt);

                // creating an object for creating a table for displaying the records fetched
                obj.displayRecord(null, res);

            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(this,Essentials.messages.getString("pleaseEnterOneField"));
                clearButtonActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void standardFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standardFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_standardFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel fromDate;
    private javax.swing.JTextField fromDateField;
    private javax.swing.JLabel heading;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel keyword;
    private javax.swing.JTextField keywordField;
    private javax.swing.JLabel level;
    private javax.swing.JComboBox levelField;
    private javax.swing.JLabel standard;
    private javax.swing.JComboBox standardField;
    private javax.swing.JLabel subject;
    private javax.swing.JComboBox subjectField;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel toDate;
    private javax.swing.JTextField toDateField;
    // End of variables declaration//GEN-END:variables
}
